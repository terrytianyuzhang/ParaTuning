xlim(c(-2.5, 2.5))+
xlab('PGS threshold')+
ylab('FDR')+
scale_color_manual(name=" ",
labels= c('1', '2', '3',
'4', '5', '6'),
values=c("#d72631", "#a2d5c6",
"#077b8a", "#5c3c92",
"#070601", "#C2C5C6"))+
scale_shape_manual(name=" ",
labels= c('1', '2', '3',
'4', '5', '6'),
values = 1:6)
#####
ggplot()+
geom_line(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
data = FDR_average_simulation)+
geom_point(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
shape = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
# show.legend = FALSE,
data = FDR_average_simulation)+
# geom_line(aes(x = threshold, y = total_positive,
#               group = as.factor(paste0(population,'-',method)),
#               color = as.factor(paste0(population,'-',method))),
#           data = FDR_all_method)+
theme_bw()+
# theme(legend.position = 'none')+
xlim(c(-2.5, 2.5))+
xlab('PGS threshold')+
ylab('FDR')+
scale_color_manual(name=" ",
values=c("#d72631", "#a2d5c6",
"#077b8a", "#5c3c92",
"#070601", "#C2C5C6"))+
scale_shape_manual(name=" ",
values = 1:6)
#####
ggplot()+
geom_line(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
data = FDR_average_simulation)+
geom_point(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
shape = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
# show.legend = FALSE,
data = FDR_average_simulation)+
# geom_line(aes(x = threshold, y = total_positive,
#               group = as.factor(paste0(population,'-',method)),
#               color = as.factor(paste0(population,'-',method))),
#           data = FDR_all_method)+
theme_bw()+
theme(legend.position = 'bottom')+
xlim(c(-2.5, 2.5))+
xlab('PGS threshold')+
ylab('FDR')+
scale_color_manual(name=" ",
values=c("#d72631", "#a2d5c6",
"#077b8a", "#5c3c92",
"#070601", "#C2C5C6"))+
scale_shape_manual(name=" ",
values = 1:6)
library(data.table)
library(ggplot2)
normalize_PRS <- function(x){
x <- (x - mean(x))/ (sd(x))
return(x)
}
setwd('/Users/tianyu/Documents/ParaTuning/data/Simulation-PRS/')
####
rawPRS_YRI <- get(load('YRI-PRS-6xx-7xx-8xx01-11-2023.RData'))
rawPRS_CEU <- get(load('CEU-PRS-6xx-7xx-8xx01-11-2023.RData'))
#####
simulation_index_sets <- list(600:609, 700:709, 800:809)
#####
for(simulation_setting in 1:length(simulation_index_sets)){
simulation_index_set <- simulation_index_sets[[simulation_setting]]
#####
FDR_all_simulations <- data.table() ##all the replicates for one simulation setting
#####
for(simulation_index in simulation_index_set){
simulaton_name <- paste0('Sim-', simulation_index)
#####
rawPRS_YRI_oneSimulation <- data.table(rawPRS_YRI[[simulaton_name]])
#####
rawPRS_YRI_oneSimulation[, population := 'YRI']
rawPRS_YRI_oneSimulation[, jls := normalize_PRS(jls)]
rawPRS_YRI_oneSimulation[, wls := normalize_PRS(wls)]
rawPRS_YRI_oneSimulation[, ls.cis := normalize_PRS(ls.cis)]
rawPRS_YRI_oneSimulation[, ls.trans := normalize_PRS(ls.trans)]
rawPRS_YRI_oneSimulation[, ls.CEU := ls.trans]
rawPRS_YRI_oneSimulation[, ls.YRI := ls.cis]
rawPRS_YRI_oneSimulation[, PHENO1 := factor(PHENO1)]
#####
rawPRS_CEU_oneSimulation <- data.table(rawPRS_CEU[[simulaton_name]])
#####
rawPRS_CEU_oneSimulation[, population := 'CEU']
rawPRS_CEU_oneSimulation[, jls := normalize_PRS(jls)]
rawPRS_CEU_oneSimulation[, wls := normalize_PRS(wls)]
rawPRS_CEU_oneSimulation[, ls.cis := normalize_PRS(ls.cis)]
rawPRS_CEU_oneSimulation[, ls.trans := normalize_PRS(ls.trans)]
rawPRS_CEU_oneSimulation[, ls.CEU := ls.cis]
rawPRS_CEU_oneSimulation[, ls.YRI := ls.trans]
rawPRS_CEU_oneSimulation[, PHENO1 := factor(PHENO1)]
#####
PRS_both_population <- rbind(rawPRS_YRI_oneSimulation,
rawPRS_CEU_oneSimulation)
#####
PRS_both_population[, is.case := as.numeric((PHENO1 == 2))]
#####
#####
##NEXT SECTION PLOTS THE FDR AGAINST PRS THRESHOLD
#####
#####
FDR_all_method <- data.table()
#####
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[jls >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1 - true_positive/total_positive]
FDR_by_threshold[, method:= 'JLssum']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
###########
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[ls.CEU >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1-true_positive/total_positive]
FDR_by_threshold[, method:= 'LS-CEU-train']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
###########
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[ls.YRI >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1-true_positive/total_positive]
FDR_by_threshold[, method:= 'LS-YRI-train']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
####
FDR_all_method$simulation_index <- simulation_index
#####
FDR_all_simulations <- rbind(FDR_all_simulations, FDR_all_method)
}##simulation_index
###########
FDR_average_simulation <- FDR_all_simulations[, .(mean_FDR = mean(FDR),
mean_total_positive = mean(total_positive),
mean_true_positive = mean(true_positive)),
by = .(population, threshold, method)]
FDR_average_simulation[, mean_false_positive := mean_total_positive - mean_true_positive]
#####
ggplot()+
geom_line(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
data = FDR_average_simulation)+
geom_point(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
shape = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
# show.legend = FALSE,
data = FDR_average_simulation)+
# geom_line(aes(x = threshold, y = total_positive,
#               group = as.factor(paste0(population,'-',method)),
#               color = as.factor(paste0(population,'-',method))),
#           data = FDR_all_method)+
theme_bw()+
theme(legend.position = 'bottom')+
xlim(c(-2.5, 2.5))+
xlab('PGS threshold')+
ylab('FDR')+
scale_color_manual(name=" ",
values=c("#d72631", "#a2d5c6",
"#077b8a", "#5c3c92",
"#070601", "#C2C5C6"))+
scale_shape_manual(name=" ",
values = 1:6)
###
filename_prefix <- c('6xx', '7xx', '8xx')
FDR_plot_file <- paste0('Sim',filename_prefix[simulation_setting],
'-testing-FDR.pdf')
ggsave(filename = FDR_plot_file,
device = "pdf",
width = 120, height = 90, units = "mm")
###
}#simulation_setting
#####
for(simulation_setting in 1:length(simulation_index_sets)){
simulation_index_set <- simulation_index_sets[[simulation_setting]]
#####
FDR_all_simulations <- data.table() ##all the replicates for one simulation setting
#####
for(simulation_index in simulation_index_set){
simulaton_name <- paste0('Sim-', simulation_index)
#####
rawPRS_YRI_oneSimulation <- data.table(rawPRS_YRI[[simulaton_name]])
#####
rawPRS_YRI_oneSimulation[, population := 'YRI']
rawPRS_YRI_oneSimulation[, jls := normalize_PRS(jls)]
rawPRS_YRI_oneSimulation[, wls := normalize_PRS(wls)]
rawPRS_YRI_oneSimulation[, ls.cis := normalize_PRS(ls.cis)]
rawPRS_YRI_oneSimulation[, ls.trans := normalize_PRS(ls.trans)]
rawPRS_YRI_oneSimulation[, ls.CEU := ls.trans]
rawPRS_YRI_oneSimulation[, ls.YRI := ls.cis]
rawPRS_YRI_oneSimulation[, PHENO1 := factor(PHENO1)]
#####
rawPRS_CEU_oneSimulation <- data.table(rawPRS_CEU[[simulaton_name]])
#####
rawPRS_CEU_oneSimulation[, population := 'CEU']
rawPRS_CEU_oneSimulation[, jls := normalize_PRS(jls)]
rawPRS_CEU_oneSimulation[, wls := normalize_PRS(wls)]
rawPRS_CEU_oneSimulation[, ls.cis := normalize_PRS(ls.cis)]
rawPRS_CEU_oneSimulation[, ls.trans := normalize_PRS(ls.trans)]
rawPRS_CEU_oneSimulation[, ls.CEU := ls.cis]
rawPRS_CEU_oneSimulation[, ls.YRI := ls.trans]
rawPRS_CEU_oneSimulation[, PHENO1 := factor(PHENO1)]
#####
PRS_both_population <- rbind(rawPRS_YRI_oneSimulation,
rawPRS_CEU_oneSimulation)
#####
PRS_both_population[, is.case := as.numeric((PHENO1 == 2))]
#####
#####
##NEXT SECTION PLOTS THE FDR AGAINST PRS THRESHOLD
#####
#####
FDR_all_method <- data.table()
#####
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[jls >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1 - true_positive/total_positive]
FDR_by_threshold[, method:= 'JLssum']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
###########
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[ls.CEU >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1-true_positive/total_positive]
FDR_by_threshold[, method:= 'LS-CEU-train']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
###########
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[ls.YRI >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1-true_positive/total_positive]
FDR_by_threshold[, method:= 'LS-YRI-train']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
####
FDR_all_method$simulation_index <- simulation_index
#####
FDR_all_simulations <- rbind(FDR_all_simulations, FDR_all_method)
}##simulation_index
###########
FDR_average_simulation <- FDR_all_simulations[, .(mean_FDR = mean(FDR),
mean_total_positive = mean(total_positive),
mean_true_positive = mean(true_positive)),
by = .(population, threshold, method)]
FDR_average_simulation[, mean_false_positive := mean_total_positive - mean_true_positive]
#####
ggplot()+
geom_line(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
data = FDR_average_simulation)+
geom_point(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
shape = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
# show.legend = FALSE,
data = FDR_average_simulation)+
# geom_line(aes(x = threshold, y = total_positive,
#               group = as.factor(paste0(population,'-',method)),
#               color = as.factor(paste0(population,'-',method))),
#           data = FDR_all_method)+
theme_bw()+
theme(legend.position = 'bottom')+
xlim(c(-2.5, 2.5))+
xlab('PGS threshold')+
ylab('FDR')+
scale_color_manual(name=" ",
values=c("#d72631", "#a2d5c6",
"#077b8a", "#5c3c92",
"#070601", "#C2C5C6"))+
scale_shape_manual(name=" ",
values = 1:6)
###
filename_prefix <- c('6xx', '7xx', '8xx')
FDR_plot_file <- paste0('Sim',filename_prefix[simulation_setting],
'-testing-FDR.pdf')
ggsave(filename = FDR_plot_file,
device = "pdf",
width = 160, height = 90, units = "mm")
###
}#simulation_setting
#####
for(simulation_setting in 1:length(simulation_index_sets)){
simulation_index_set <- simulation_index_sets[[simulation_setting]]
#####
FDR_all_simulations <- data.table() ##all the replicates for one simulation setting
#####
for(simulation_index in simulation_index_set){
simulaton_name <- paste0('Sim-', simulation_index)
#####
rawPRS_YRI_oneSimulation <- data.table(rawPRS_YRI[[simulaton_name]])
#####
rawPRS_YRI_oneSimulation[, population := 'YRI']
rawPRS_YRI_oneSimulation[, jls := normalize_PRS(jls)]
rawPRS_YRI_oneSimulation[, wls := normalize_PRS(wls)]
rawPRS_YRI_oneSimulation[, ls.cis := normalize_PRS(ls.cis)]
rawPRS_YRI_oneSimulation[, ls.trans := normalize_PRS(ls.trans)]
rawPRS_YRI_oneSimulation[, ls.CEU := ls.trans]
rawPRS_YRI_oneSimulation[, ls.YRI := ls.cis]
rawPRS_YRI_oneSimulation[, PHENO1 := factor(PHENO1)]
#####
rawPRS_CEU_oneSimulation <- data.table(rawPRS_CEU[[simulaton_name]])
#####
rawPRS_CEU_oneSimulation[, population := 'CEU']
rawPRS_CEU_oneSimulation[, jls := normalize_PRS(jls)]
rawPRS_CEU_oneSimulation[, wls := normalize_PRS(wls)]
rawPRS_CEU_oneSimulation[, ls.cis := normalize_PRS(ls.cis)]
rawPRS_CEU_oneSimulation[, ls.trans := normalize_PRS(ls.trans)]
rawPRS_CEU_oneSimulation[, ls.CEU := ls.cis]
rawPRS_CEU_oneSimulation[, ls.YRI := ls.trans]
rawPRS_CEU_oneSimulation[, PHENO1 := factor(PHENO1)]
#####
PRS_both_population <- rbind(rawPRS_YRI_oneSimulation,
rawPRS_CEU_oneSimulation)
#####
PRS_both_population[, is.case := as.numeric((PHENO1 == 2))]
#####
#####
##NEXT SECTION PLOTS THE FDR AGAINST PRS THRESHOLD
#####
#####
FDR_all_method <- data.table()
#####
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[jls >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1 - true_positive/total_positive]
FDR_by_threshold[, method:= 'JLssum']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
###########
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[ls.CEU >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1-true_positive/total_positive]
FDR_by_threshold[, method:= 'LS-CEU-train']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
###########
FDR_by_threshold <- data.table()
for(threshold in seq(-4, 4, length = 50)){
temp_table <- PRS_both_population[ls.YRI >= threshold,
.(total_positive = .N,
true_positive = sum(is.case),
threshold = threshold),
by = population]
FDR_by_threshold <- rbind(FDR_by_threshold,
temp_table)
}
FDR_by_threshold[, FDR:= 1-true_positive/total_positive]
FDR_by_threshold[, method:= 'LS-YRI-train']
#####
FDR_all_method <- rbind(FDR_all_method, FDR_by_threshold)
####
FDR_all_method$simulation_index <- simulation_index
#####
FDR_all_simulations <- rbind(FDR_all_simulations, FDR_all_method)
}##simulation_index
###########
FDR_average_simulation <- FDR_all_simulations[, .(mean_FDR = mean(FDR),
mean_total_positive = mean(total_positive),
mean_true_positive = mean(true_positive)),
by = .(population, threshold, method)]
FDR_average_simulation[, mean_false_positive := mean_total_positive - mean_true_positive]
#####
ggplot()+
geom_line(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
data = FDR_average_simulation)+
geom_point(aes(x = threshold, y = mean_FDR,
group = as.factor(paste0(population,'-',method)),
shape = as.factor(paste0(population,'-',method)),
color = as.factor(paste0(population,'-',method))),
# show.legend = FALSE,
data = FDR_average_simulation)+
# geom_line(aes(x = threshold, y = total_positive,
#               group = as.factor(paste0(population,'-',method)),
#               color = as.factor(paste0(population,'-',method))),
#           data = FDR_all_method)+
theme_bw()+
# theme(legend.position = 'bottom')+
xlim(c(-2.5, 2.5))+
xlab('PGS threshold')+
ylab('FDR')+
scale_color_manual(name=" ",
values=c("#d72631", "#a2d5c6",
"#077b8a", "#5c3c92",
"#070601", "#C2C5C6"))+
scale_shape_manual(name=" ",
values = 1:6)
###
filename_prefix <- c('6xx', '7xx', '8xx')
FDR_plot_file <- paste0('Sim',filename_prefix[simulation_setting],
'-testing-FDR.pdf')
ggsave(filename = FDR_plot_file,
device = "pdf",
width = 160, height = 90, units = "mm")
###
}#simulation_setting
GWAS_file <- list(CEU = paste0(ParameterTuningDirectory, "Assoc/CEU-synthetic-train.PHENO1.glm.logistic.hybrid"),
YRI = paste0(ParameterTuningDirectory, "Assoc/YRI-synthetic-train.PHENO1.glm.logistic.hybrid"))
ParameterTuningDirectory <- '/foo/'
GWAS_file <- list(CEU = paste0(ParameterTuningDirectory, "Assoc/CEU-synthetic-train.PHENO1.glm.logistic.hybrid"),
YRI = paste0(ParameterTuningDirectory, "Assoc/YRI-synthetic-train.PHENO1.glm.logistic.hybrid"))
GWAS_file[["CEU"]]
output_directory <- paste0(ParameterTuningDirectory, "JointLassosumSyntheticData/")
output_directory
exp(seq(log(0.0025), log(0.025), length.out=10))
validation_genotype_file_list <- list()
for(chr_index in 1:22){
one_chr_genotype_file <- list()
####
for(ancestry in c("CEU", "YRI")){
one_chr_genotype_file[[ancestry]] <- paste0(ParameterTuningDirectory, "CHR/", ancestry,"-chr", chr_index,"synthetic-val")
}
####
validation_genotype_file_list[[chr_index]] <- one_chr_genotype_file
}
ParameterTuningDirectory
validation_genotype_file_list
chr = 1
anc = 'CEU'
####load genotype data without label
genotype_prefix <- genotype_prefix_list[[chr]][[anc]]
genotype_prefix_list = validation_genotype_file_list
####load genotype data without label
genotype_prefix <- genotype_prefix_list[[chr]][[anc]]
genotype_prefix
A <- matrix(c(1,2,3,4), ncol  = 2)
which.max(A)
A[4]
as.character(800:802)
?sprintf
