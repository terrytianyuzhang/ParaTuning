setwd('/Users/tianyu/Documents/ParaTuning/data/parameter_tuning_auc/')
raw_parameter_tuning_auc <- get(load('synthetic_data_tuning_auc_gamma_0.80_lambda_0.0070.RData'))
#####
auc_data_frame <- data.table()
for(repeat_index in 1:length(raw_parameter_tuning_auc)){
temporary_data_frame <- raw_parameter_tuning_auc[[repeat_index]]
temporary_data_frame$simulation_index <- names(raw_parameter_tuning_auc)[repeat_index]
auc_data_frame <- rbind(auc_data_frame,
temporary_data_frame)
}
setwd('/Users/tianyu/Documents/ParaTuning/data/')
cross_validation_auc <- get(load('simulations-Results-6xx-7xx-8xx01-13-2023.RData'))
cross_validation_auc_data_frame <- data.table()
repeat_name <- 'sim-800'
repeat_name <- 'Sim-800'
temporary_data_frame <- cross_validation_auc[[repeat_name]][['jls']]
formatted_temporary_data_frame <- data.frame(ancestry = temporary_data_frame$TST,
cross_validation_auc = temporary_data_frame$auc,
simulation_index = gsub("Sim-", "", repeat_name))
formatted_temporary_data_frame
auc_data_frame <- merge(auc_data_frame, formatted_temporary_data_frame,
by = c("simulation_index", "ancestry"),
all.x = T)
auc_data_frame
library(data.table)
setwd('/Users/tianyu/Documents/ParaTuning/data/parameter_tuning_auc/')
raw_parameter_tuning_auc <- get(load('synthetic_data_tuning_auc_gamma_0.80_lambda_0.0070.RData'))
#####
auc_data_frame <- data.table()
for(repeat_index in 1:length(raw_parameter_tuning_auc)){
temporary_data_frame <- raw_parameter_tuning_auc[[repeat_index]]
temporary_data_frame$simulation_index <- names(raw_parameter_tuning_auc)[repeat_index]
auc_data_frame <- rbind(auc_data_frame,
temporary_data_frame)
}
#####
setwd('/Users/tianyu/Documents/ParaTuning/data/')
cross_validation_auc <- get(load('simulations-Results-6xx-7xx-8xx01-13-2023.RData'))
cross_validation_auc_data_frame <- data.table()
for(repeat_name in names(cross_validation_auc)){
temporary_data_frame <- cross_validation_auc[[repeat_name]][['jls']]
formatted_temporary_data_frame <- data.frame(ancestry = temporary_data_frame$TST,
cross_validation_auc = temporary_data_frame$auc,
simulation_index = gsub("Sim-", "", repeat_name))
cross_validation_auc_data_frame <- rbind(cross_validation_auc_data_frame,
formatted_temporary_data_frame)
}
auc_data_frame <- merge(auc_data_frame, formatted_temporary_data_frame,
by = c("simulation_index", "ancestry"),
all.x = T)
auc_data_frame
cross_validation_auc_data_frame
auc_data_frame
library(data.table)
setwd('/Users/tianyu/Documents/ParaTuning/data/parameter_tuning_auc/')
raw_parameter_tuning_auc <- get(load('synthetic_data_tuning_auc_gamma_0.80_lambda_0.0070.RData'))
#####
auc_data_frame <- data.table()
for(repeat_index in 1:length(raw_parameter_tuning_auc)){
temporary_data_frame <- raw_parameter_tuning_auc[[repeat_index]]
temporary_data_frame$simulation_index <- names(raw_parameter_tuning_auc)[repeat_index]
auc_data_frame <- rbind(auc_data_frame,
temporary_data_frame)
}
#####
setwd('/Users/tianyu/Documents/ParaTuning/data/')
cross_validation_auc <- get(load('simulations-Results-6xx-7xx-8xx01-13-2023.RData'))
cross_validation_auc_data_frame <- data.table()
for(repeat_name in names(cross_validation_auc)){
temporary_data_frame <- cross_validation_auc[[repeat_name]][['jls']]
formatted_temporary_data_frame <- data.frame(ancestry = temporary_data_frame$TST,
cross_validation_auc = temporary_data_frame$auc,
simulation_index = gsub("Sim-", "", repeat_name))
cross_validation_auc_data_frame <- rbind(cross_validation_auc_data_frame,
formatted_temporary_data_frame)
}
cross_validation_auc_data_frame
auc_data_frame
formatted_temporary_data_frame
auc_data_frame <- merge(auc_data_frame, cross_validation_auc_data_frame,
by = c("simulation_index", "ancestry"),
all.x = T)
auc_data_frame
auc_data_frame
exp(seq(log(0.0025), log(0.025), length.out=10))
library(data.table)
setwd('/Users/tianyu/Documents/ParaTuning/data/parameter_tuning_auc/')
raw_parameter_tuning_auc <- get(load('synthetic_data_tuning_auc_gamma_0.80_lambda_0.0070.RData'))
#####
auc_data_frame <- data.table()
for(repeat_index in 1:length(raw_parameter_tuning_auc)){
temporary_data_frame <- raw_parameter_tuning_auc[[repeat_index]]
temporary_data_frame$simulation_index <- names(raw_parameter_tuning_auc)[repeat_index]
auc_data_frame <- rbind(auc_data_frame,
temporary_data_frame)
}
#####
setwd('/Users/tianyu/Documents/ParaTuning/data/')
cross_validation_auc <- get(load('simulations-Results-6xx-7xx-8xx01-13-2023.RData'))
cross_validation_auc_data_frame <- data.table()
for(repeat_name in names(cross_validation_auc)){
temporary_data_frame <- cross_validation_auc[[repeat_name]][['jls']]
formatted_temporary_data_frame <- data.frame(ancestry = temporary_data_frame$TST,
cross_validation_auc = temporary_data_frame$auc,
simulation_index = gsub("Sim-", "", repeat_name))
cross_validation_auc_data_frame <- rbind(cross_validation_auc_data_frame,
formatted_temporary_data_frame)
}
auc_data_frame <- merge(auc_data_frame, cross_validation_auc_data_frame,
by = c("simulation_index", "ancestry"),
all.x = T)
View(auc_data_frame)
auc_data_frame
auc_data_frame_long = melt(auc_data_frame,
id.vars = c("simulation_index", "ancestry"),
measure.vars = c("oracle_auc", "tuned_auc"))
auc_data_frame_long
?melt
auc_data_frame_long = melt(auc_data_frame,
id.vars = c("simulation_index", "ancestry"),
measure.vars = c("oracle_auc", "tuned_auc"),
variable.name = "auc_source", value.name = "auc")
auc_data_frame_long
tuned_and_best_auc <- ggplot(auc_data_frame_long) +
geom_violin(aes(x=auc_source, y=auc, fill = auc_source),
trim=T, alpha = 0.4)+
geom_point(aes(x=auc_source, y=auc,
color = auc_source),  alpha = 0.8,
position = position_jitter(width = 0.05))+
scale_fill_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
# ylim(c(0.5,0.9))+
# xlab("Method")+
# ylab("CEU tst. AUC")+
theme_bw()
library(ggplot)
library(ggplot2)
tuned_and_best_auc <- ggplot(auc_data_frame_long) +
geom_violin(aes(x=auc_source, y=auc, fill = auc_source),
trim=T, alpha = 0.4)+
geom_point(aes(x=auc_source, y=auc,
color = auc_source),  alpha = 0.8,
position = position_jitter(width = 0.05))+
scale_fill_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
# ylim(c(0.5,0.9))+
# xlab("Method")+
# ylab("CEU tst. AUC")+
theme_bw()
tuned_and_best_auc
auc_data_frame
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
color = ancestry))
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
color = ancestry))+
theme_bw()
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
color = ancestry))+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
theme_bw()
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
color = ancestry))+
geom_abline(slope = 1, intercept = 0)+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
theme_bw()
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
color = ancestry))+
geom_abline(slope = 1, intercept = 0)+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
xlim(c(0.7, 1))+
ylim(c(0.7, 1))+
theme_bw()
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
color = ancestry))+
geom_abline(slope = 1, intercept = 0)+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
xlim(c(0.7, 0.9))+
ylim(c(0.7, 0.9))+
theme_bw()
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
shape = ancestry))+
geom_abline(slope = 1, intercept = 0)+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
xlim(c(0.7, 0.9))+
ylim(c(0.7, 0.9))+
theme_bw()
ggsave(filename = "Sim6xx-testing-AUC.pdf",
device = "pdf",
width = 180, height = 90, units = "mm")
library(data.table)
setwd('/Users/tianyu/Documents/ParaTuning/data/')
rawSimulationAUC <- get(load('simulations-Results-6xx-7xx-8xx01-13-2023.RData'))
clean_simulation_AUC <- data.table()
for(setting_index in 1:10){
pnt_result <- rawSimulationAUC[[setting_index]]$pnt
pnt_result_formated <- pnt_result[,c('TRN','TST','auc')]
pnt_result_formated$setting <- names(rawSimulationAUC)[setting_index]
pnt_result_formated$method <- 'PnT'
clean_simulation_AUC <- rbind(clean_simulation_AUC,
pnt_result_formated)
wpnt_result <- rawSimulationAUC[[setting_index]]$wpnt
wpnt_result_formated <- wpnt_result[,c('TST','auc')]
wpnt_result_formated$TRN <- 'Both'
wpnt_result_formated$setting <- names(rawSimulationAUC)[setting_index]
wpnt_result_formated$method <- 'PnT-wt'
clean_simulation_AUC <- rbind(clean_simulation_AUC,
wpnt_result_formated)
ls_result <- rawSimulationAUC[[setting_index]]$ls
ls_result_formated <- ls_result[,c('TRN','TST','auc')]
ls_result_formated$setting <- names(rawSimulationAUC)[setting_index]
ls_result_formated$method <- 'LS'
clean_simulation_AUC <- rbind(clean_simulation_AUC,
ls_result_formated)
wls_result <- rawSimulationAUC[[setting_index]]$wls
wls_result_formated <- wls_result[,c('TST','auc')]
wls_result_formated$TRN <- 'Both'
wls_result_formated$setting <- names(rawSimulationAUC)[setting_index]
wls_result_formated$method <- 'LS-wt'
clean_simulation_AUC <- rbind(clean_simulation_AUC,
wls_result_formated)
jls_result <- rawSimulationAUC[[setting_index]]$jls
jls_result_formated <- jls_result[,c('TST','auc')]
jls_result_formated$TRN <- 'Both'
jls_result_formated$setting <- names(rawSimulationAUC)[setting_index]
jls_result_formated$method <- 'JLS'
clean_simulation_AUC <- rbind(clean_simulation_AUC,
jls_result_formated)
tl_result <- rawSimulationAUC[[setting_index]]$tl
tl_result_formated <- tl_result[,c('TST','auc')]
tl_result_formated$TRN <- 'Both'
tl_result_formated$setting <- names(rawSimulationAUC)[setting_index]
tl_result_formated$method <- 'TL'
clean_simulation_AUC <- rbind(clean_simulation_AUC,
tl_result_formated)
# clean_simulation_AUC <- rbind(clean_simulation_AUC,
#                               data.frame(setting = names(rawSimulationAUC)[setting_index],
#                                          TrainData = )
}
clean_simulation_AUC[, method := factor(method,
levels = c("JLS", "TL", "LS-wt", "PnT-wt", "LS", "PnT"))]
clean_simulation_AUC[, method_TRN := factor(paste0(method,'(',TRN,')'),
levels = c("JLS(Both)", "TL(Both)", "LS-wt(Both)", "PnT-wt(Both)",
"LS(CEU)", "PnT(CEU)", "LS(YRI)", "PnT(YRI)"))]
##########violin plots#####
library(ggplot2)
library(ggpubr)
mainYRI <- ggplot(clean_simulation_AUC[TST == 'YRI',]) +
geom_violin(aes(x=method_TRN, y=auc, fill = method_TRN),
trim=T, alpha = 0.4)+
geom_point(aes(x=method_TRN, y=auc,
color = method_TRN),  alpha = 0.8,
position = position_jitter(width = 0.05))+
scale_fill_manual(values=c("#9b5fe0", "#16a4d8", "#60dbe8",
"#8bd346", "#efdf48","#f9a52c",
"#d64e12","#B6BeB2"))+
scale_color_manual(values=c("#9b5fe0", "#16a4d8", "#60dbe8",
"#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
ylim(c(0.5,0.9))+
# xlab("Method")+
xlab(NULL)+
ylab("YRI tst. AUC")+
theme_bw()
# theme(axis.text.x=element_blank())
mainCEU <- ggplot(clean_simulation_AUC[TST == 'CEU',]) +
geom_violin(aes(x=method_TRN, y=auc, fill = method_TRN),
trim=T, alpha = 0.4)+
geom_point(aes(x=method_TRN, y=auc,
color = method_TRN),  alpha = 0.8,
position = position_jitter(width = 0.05))+
scale_fill_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
ylim(c(0.5,0.9))+
xlab("Method")+
ylab("CEU tst. AUC")+
theme_bw()
# ggsave(filename = "Sim8xxTestingAUC.pdf",
#        width = 18,
#        height = 5,
#        units = "cm")
mainCombined<- ggarrange(
mainYRI,mainCEU,
nrow = 2,
# labels = c("A","B"),
common.legend = TRUE,legend = 'none'
)
mainCombined
ggsave(filename = "Sim6xx-testing-AUC.pdf",
device = "pdf",
width = 180, height = 90, units = "mm")
#
# setwd('/Users/tianyu/Documents/ParaTuning/data/Simulation-AUC')
#
#
# results <- data.frame()
#
#
# for(i.sim in 800:801){
# #######PT###########
# tune.sets <- c('CEU.TUNE', 'YRI.TUNE')
# for(tune.set in tune.sets){
#   PTraw <- get(load(paste0("No", i.sim, tune.set, "weightedPT-AUC.RData")))
#   temp.results <- data.frame(method = 'PT-CEU',
#                              i.sim = i.sim,
#                              test.population = gsub('.TUNE', '', tune.set),
#                              AUC = PTraw[PTraw$wght == 1,]$AUC)
#   results <- rbind(results, temp.results)
#
#   temp.results <- data.frame(method = 'PT-weighted',
#                              i.sim = i.sim,
#                              test.population = gsub('.TUNE', '', tune.set),
#                              AUC = max(PTraw$AUC))
#   results <- rbind(results, temp.results)
# }
#
# #######Lassosum###########
# test.sets <- c('CEU.TST', 'YRI.TST')
# test.set <- test.sets[1]
# for(test.set in test.sets){
#   lassosumraw <- get(load(paste0("No", i.sim, test.set, "weightedLassosum-AUC.RData")))
#
#   temp.results <- data.frame(method = 'Lsm-CEU',
#                              i.sim = i.sim,
#                              test.population = gsub('.TST', '', test.set),
#                              AUC = lassosumraw[lassosumraw$wght == 1,]$AUC)
#   results <- rbind(results, temp.results)
#
#   temp.results <- data.frame(method = 'Lsm-weighted',
#                              i.sim = i.sim,
#                              test.population = gsub('.TST', '', test.set),
#                              AUC = max(lassosumraw$AUC))
#   results <- rbind(results, temp.results)
#
# }
#
# ###Joint Lassosum###
# GAMMA <- c(0.2,0.5,0.8)
# test.sets <- c('CEU.TST', 'YRI.TST')
# for(test.set in test.sets){
#   all.AUC <- c()
#   for(gamma in GAMMA){
#     JLraw <- get(load(paste0("No", i.sim, sprintf("-gamma-%.2f",gamma),"-", test.set, "JointLassosum-AUC.RData")))
#     all.AUC <- c(all.AUC, JLraw)
#   }
#   temp.results <- data.frame(method = 'JL',
#                              i.sim = i.sim,
#                              test.population = gsub('.TST', '', test.set),
#                              AUC = max(all.AUC))
#   results <- rbind(results, temp.results)
# }
#
# }#i.sim
#
# ##########violin plots#####
# library(ggplot2)
# results <- rbind(results,results,results,results)
# results$AUC <- results$AUC + rnorm(NROW(results), 0, 0.01)
# ggplot(results[results$test.population == 'YRI',]) +
#   geom_violin(aes(x=method, y=AUC, fill = as.factor(method)),
#               trim=FALSE)+
#   scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9",
#                              "#F6B419", "#56B419"))+
#   theme_bw()
#
#   # geom_point(aes(x=method, y=AUC))
#
# ggplot(results[results$test.population == 'YRI',]) +
#   geom_violin(aes(x=method, y=AUC))
ggsave(filename = "Sim8xx-parameter-tuning-scatter.pdf",
device = "pdf",
width = 180, height = 90, units = "mm")
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
shape = ancestry))+
geom_abline(slope = 1, intercept = 0)+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
xlim(c(0.7, 0.9))+
ylim(c(0.7, 0.9))+
theme_bw()
ggsave(filename = "Sim8xx-parameter-tuning-scatter.pdf",
device = "pdf",
width = 180, height = 90, units = "mm")
ggsave(filename = "Sim8xx-parameter-tuning-scatter.pdf",
device = "pdf",
width = 100, height = 100, units = "mm")
ggsave(filename = "Sim8xx-parameter-tuning-scatter.pdf",
device = "pdf",
width = 120, height = 100, units = "mm")
ggsave(filename = "Sim8xx-parameter-tuning-scatter.pdf",
device = "pdf",
width = 80, height = 66, units = "mm")
ggsave(filename = "Sim8xx-parameter-tuning-scatter.pdf",
device = "pdf",
width = 120, height = 100, units = "mm")
lambda=abs(exp(seq(log(.02), log(0.001), length.out=20))-.021) # tuning parameter, this can be chosen
lambda
lambda=exp(seq(log(0.0025), log(0.025), length.out=10))
lambda
setwd('/Users/tianyu/Documents/ParaTuning/data/parameter_tuning_auc/')
raw_parameter_tuning_auc <- get(load('synthetic_data_tuning_auc_gamma_0.50_lambda_0.0070.RData'))
#####
auc_data_frame <- data.table()
for(repeat_index in 1:length(raw_parameter_tuning_auc)){
temporary_data_frame <- raw_parameter_tuning_auc[[repeat_index]]
temporary_data_frame$simulation_index <- names(raw_parameter_tuning_auc)[repeat_index]
auc_data_frame <- rbind(auc_data_frame,
temporary_data_frame)
}
#####
setwd('/Users/tianyu/Documents/ParaTuning/data/')
cross_validation_auc <- get(load('simulations-Results-6xx-7xx-8xx01-13-2023.RData'))
cross_validation_auc_data_frame <- data.table()
for(repeat_name in names(cross_validation_auc)){
temporary_data_frame <- cross_validation_auc[[repeat_name]][['jls']]
formatted_temporary_data_frame <- data.frame(ancestry = temporary_data_frame$TST,
cross_validation_auc = temporary_data_frame$auc,
simulation_index = gsub("Sim-", "", repeat_name))
cross_validation_auc_data_frame <- rbind(cross_validation_auc_data_frame,
formatted_temporary_data_frame)
}
auc_data_frame <- merge(auc_data_frame, cross_validation_auc_data_frame,
by = c("simulation_index", "ancestry"),
all.x = T)
###
auc_data_frame_long <- melt(auc_data_frame,
id.vars = c("simulation_index", "ancestry"),
measure.vars = c("oracle_auc", "tuned_auc"),
variable.name = "auc_source", value.name = "auc")
#######
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
shape = ancestry))+
geom_abline(slope = 1, intercept = 0)+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
xlim(c(0.7, 0.9))+
ylim(c(0.7, 0.9))+
theme_bw()
library(data.table)
library(ggplot2)
setwd('/Users/tianyu/Documents/ParaTuning/data/parameter_tuning_auc/')
raw_parameter_tuning_auc <- get(load('synthetic_data_tuning_auc_gamma_0.80_lambda_0.0070.RData'))
#####
auc_data_frame <- data.table()
for(repeat_index in 1:length(raw_parameter_tuning_auc)){
temporary_data_frame <- raw_parameter_tuning_auc[[repeat_index]]
temporary_data_frame$simulation_index <- names(raw_parameter_tuning_auc)[repeat_index]
auc_data_frame <- rbind(auc_data_frame,
temporary_data_frame)
}
#####
setwd('/Users/tianyu/Documents/ParaTuning/data/')
cross_validation_auc <- get(load('simulations-Results-6xx-7xx-8xx01-13-2023.RData'))
cross_validation_auc_data_frame <- data.table()
for(repeat_name in names(cross_validation_auc)){
temporary_data_frame <- cross_validation_auc[[repeat_name]][['jls']]
formatted_temporary_data_frame <- data.frame(ancestry = temporary_data_frame$TST,
cross_validation_auc = temporary_data_frame$auc,
simulation_index = gsub("Sim-", "", repeat_name))
cross_validation_auc_data_frame <- rbind(cross_validation_auc_data_frame,
formatted_temporary_data_frame)
}
auc_data_frame <- merge(auc_data_frame, cross_validation_auc_data_frame,
by = c("simulation_index", "ancestry"),
all.x = T)
###
auc_data_frame_long <- melt(auc_data_frame,
id.vars = c("simulation_index", "ancestry"),
measure.vars = c("oracle_auc", "tuned_auc"),
variable.name = "auc_source", value.name = "auc")
#######
ggplot(auc_data_frame)+
geom_point(aes(x = oracle_auc, y = tuned_auc,
shape = ancestry))+
geom_abline(slope = 1, intercept = 0)+
scale_color_manual(values=c("#9b5fe0",
# "#16a4d8",
"#60dbe8", "#8bd346", "#efdf48","#f9a52c","#d64e12","#B6BeB2"))+
xlim(c(0.7, 0.9))+
ylim(c(0.7, 0.9))+
theme_bw()
